name: Node CI

on:
  push:
    branches:
      - master
    tags:
      - v*
    paths:
      - '**'
      - '!**.md' # Exclude Markdown
  pull_request:
    paths:
      - '**'
      - '!**.md' # Exclude Markdown

env:
  NODE_VERSION: 12

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3.0.2
      - name: Setup Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v3.3.0
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: yarn

      - name: Install Dependencies
        run: yarn --frozen-lockfile

      - name: Lint
        run: yarn lint

  build:
    name: Build & Test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3.0.2
      - name: Setup Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v3.3.0
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: yarn

      - name: Install Dependencies
        run: yarn --frozen-lockfile

      - name: Build
        run: yarn build
      - name: Test
        run: yarn test

      - name: Report Code Coverage to codecov
        uses: codecov/codecov-action@v3.1.0

      - name: Archive Production Artifact
        if: ${{ always() }} && contains(github.ref, 'tags/v') # works only version tagged
        uses: actions/upload-artifact@v3.1.0
        with:
          name: dist
          path: dist

  deploy:
    name: Deploy
    needs: [build]
    if: github.event_name == 'push' && contains(github.ref, 'tags/v') # works only version tagged
    runs-on: ubuntu-latest
    steps:
      - name: Download Production Artifact
        uses: actions/download-artifact@v3.0.0
        with:
          name: dist
      - name: Get Version
        id: get_tag
        run: echo ::set-output name=version::${TAG_REF_NAME##*/}
        env:
          TAG_REF_NAME: ${{ github.ref }}
      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./dist
          cname: cs.ddradar.app
          commit_message: 'build: release ${{ steps.get_tag.outputs.version }} via '
